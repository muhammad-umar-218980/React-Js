React Icon Library

What is React Icon Library?

- React Icon Library is a popular library that provides a wide collection of icons for React projects.
- It allows developers to use scalable vector icons without manually managing SVG files or images.
- Icons are organized by various icon packs like Font Awesome, Feather, Material Design, and more.
- Helps make UIs visually appealing with minimal effort.

Key Benefits:

- Large Collection: Thousands of icons from multiple popular icon libraries.
- Easy to Use: Simple imports in React components.
- Customizable: Can change size, color, and style via props.
- Lightweight: Only imports the icons you use, reducing bundle size.
- Scalable: Vector icons scale well on different screen sizes and resolutions.

Installation:

- Open terminal in your project directory.
- Run the npm install command:
  `npm install react-icons --save`

Usage in React:

- Import the specific icon you want to use from the relevant icon pack.
- Wrap it as a React component in your JSX.

Example 1: Basic Icon Usage

import React from "react";
import { FcHome } from "react-icons/fc"; // Importing home icon from Flat Color icons

function App() {
  return (
    <div>
      <h1>Welcome to React Icon Library</h1>
      <FcHome size={50} /> {/* Using the icon with custom size */}
    </div>
  );
}

export default App;


Output:

Displays a home icon (from Flat Color icon pack) next to the heading.

Example 2: Multiple Icons and Styling

import React from "react";
import { FcApproval, FcAlarmClock } from "react-icons/fc";

function IconDemo() {
  return (
    <div>
      <h2>React Icons Examples</h2>
      <FcApproval size={40} style={{ marginRight: "10px", color: "green" }} />
      <FcAlarmClock size={40} style={{ marginLeft: "10px", color: "red" }} />
    </div>
  );
}

export default IconDemo;


Output:

Shows multiple icons side by side with custom size, spacing, and color.

Example 3: Using Icons as Buttons

import React from "react";
import { FcLike } from "react-icons/fc";

function LikeButton() {
  const handleClick = () => {
    alert("You liked this!");
  };

  return (
    <button onClick={handleClick} style={{ fontSize: "24px", cursor: "pointer" }}>
      <FcLike /> Like
    </button>
  );
}

export default LikeButton;


Output:

Icon is embedded inside a button and triggers an alert on click.

Notes:

- Only import the icons you need to reduce bundle size.
- You can adjust the size with size prop and color using style prop.
- Compatible with functional components and hooks.
- Works well with both global and module CSS for styling.

Summary:

- React Icon Library simplifies icon usage in React.
- Install via npm, import icons, and use them as components.
- Highly customizable, scalable, and lightweight solution for modern React UIs.